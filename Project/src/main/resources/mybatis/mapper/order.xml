<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="order">

    <!-- 전체 주문내역 조회 -->
    <select id="select_all" resultType="user.vo.OrderVO" parameterType="String">
        SELECT DISTINCT s.name AS brand, p.prod_code AS prod_code, p.name AS prod_name, p.price AS prod_price, p.sale AS prod_sale, p.prod_image AS prod_image,
        p.saled_price AS prod_saled_price, i.option_name AS option_name, o.* FROM `order` o
        INNER JOIN product p ON o.prod_no = p.id
        INNER JOIN seller s ON p.seller_no = s.id
        LEFT JOIN inventory i ON i.id = o.inventory_no
        WHERE o.cus_no = ${cus_no} AND o.order_date IS NOT NULL
        ORDER BY o.order_date DESC
    </select>

    <!-- 날짜 별 주문내역 조회 -->
    <select id="select_date" resultType="user.vo.OrderVO" parameterType="map">
        SELECT DISTINCT s.name AS brand, p.prod_code AS prod_code, p.name AS prod_name, p.price AS prod_price, p.sale AS prod_sale, p.prod_image AS prod_image,
        p.saled_price AS prod_saled_price, i.option_name AS option_name, o.* FROM `order` o
        INNER JOIN product p ON o.prod_no = p.id
        INNER JOIN seller s ON p.seller_no = s.id
        LEFT JOIN inventory i ON i.id = o.inventory_no
        WHERE cus_no = #{cus_no}
        <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            AND o.order_date BETWEEN #{startDate} AND #{endDate}
        </if>
        ORDER BY o.order_date DESC
    </select>

    <!-- 주문코드를 기반으로 주문, 배송, 결제 정보를 조회(list) -->
    <select id="select_order_code" resultType="user.vo.OrderVO" parameterType="map">
        SELECT o.*, s.name AS brand, d.name AS deli_name, d.pos_code, d.addr1, d.addr2, d.phone, d.request AS deli_request, d.is_default AS is_default, p.prod_code AS prod_code, po.amount AS point_amount,
        p.name AS prod_name, p.price AS prod_price, p.sale AS prod_sale, p.prod_image AS prod_image, p.saled_price AS prod_saled_price, i.option_name AS option_name
        FROM `order` o
        INNER JOIN product p ON o.prod_no = p.id
        INNER JOIN delivery d ON o.deli_no = d.id
        INNER JOIN seller s ON p.seller_no = s.id
        LEFT JOIN inventory i ON i.id = o.inventory_no
        LEFT JOIN point po ON po.id = o.point_no
        WHERE o.order_code = #{order_code} AND o.cus_no = #{cus_no}
    </select>

    <!-- 주문코드를 기반으로 주문 정보만 조회(vo) -->
    <select id="select_order" resultType="user.vo.OrderVO" parameterType="map">
        SELECT DISTINCT deli_no, order_code, order_date, pay_type, order_bank, order_account, card_name, status FROM `order`
        WHERE order_code = #{order_code} AND cus_no = #{cus_no}
    </select>

    <!-- 주문코드 별 금액 총 합 -->
    <select id="select_total_price" resultType="int" parameterType="map">
        SELECT SUM(p.price) FROM `order` o
        INNER JOIN product p ON o.prod_no = p.id
        WHERE order_code = #{order_code} AND cus_no = #{cus_no}
    </select>

    <!-- 주문코드 별 할인 금액 총 합 -->
    <select id="select_total_saled_price" resultType="int" parameterType="map">
        SELECT IFNULL(SUM(p.saled_price), 0) FROM `order` o
        INNER JOIN product p ON o.prod_no = p.id
        WHERE o.order_code = #{order_code} AND o.cus_no = #{cus_no}
    </select>

    <!-- 주문 상세 조회(배송지 변경 로그 입력 시 사용) -->
    <select id="select_order_details" resultType="user.vo.OrderVO" parameterType="map">
        SELECT DISTINCT cus_no, order_code, deli_no FROM `order`
        WHERE cus_no = #{cus_no} AND order_code = #{order_code}
    </select>

    <!-- 상품 사이즈 정보 가져오기 -->
    <select id="select_size" resultType="String" parameterType="String">
        SELECT i.option_name AS option_name FROM product p
        JOIN inventory i ON i.prod_no = p.id
        WHERE p.id = #{id} AND p.is_del = 0 AND i.count > 0
        ORDER BY
        CASE
        WHEN i.option_name = 'XS' THEN 1
        WHEN i.option_name = 'S' THEN 2
        WHEN i.option_name = 'M' THEN 3
        WHEN i.option_name = 'L' THEN 4
        WHEN i.option_name = 'XL' THEN 5
        WHEN i.option_name = 'XXL' THEN 6
        ELSE 7
        END
    </select>

    <!-- 주문 배송지 변경 update -->
    <update id="update_order_delivery" parameterType="map">
        UPDATE `order`
        SET deli_no = #{deli_no}
        WHERE order_code = #{order_code}
        AND cus_no = #{cus_no}
    </update>

    <!-- 취소 요청 -->
    <update id="update_order_cancel" parameterType="map">
        UPDATE `order`
        SET status = 6, refund_bank = #{refund_bank}, refund_account = #{refund_account},
        reason = #{reason}
        WHERE cus_no = #{cus_no} AND order_code = #{order_code}
        AND prod_no IN
        <foreach collection="prod_no_list" item="prod_no" separator="," open="(" close=")">
            #{prod_no}
        </foreach>
    </update>

    <!-- 반품 요청 -->
    <update id="update_order_refund" parameterType="map">
        UPDATE `order`
        SET status = 7, refund_bank = #{refund_bank}, refund_account = #{refund_account},
        reason = #{reason}, retrieve_deli_no = #{retrieve_deli_no}
        WHERE cus_no = #{cus_no} AND order_code = #{order_code}
        AND prod_no IN
        <foreach collection="prod_no_list" item="prod_no" separator="," open="(" close=")">
            #{prod_no}
        </foreach>
    </update>

    <!-- 교환 요청 -->
    <update id="update_order_exchange" parameterType="map">
        UPDATE `order`
        SET status = 8, reason = #{reason}, retrieve_deli_no = #{retrieve_deli_no}
        WHERE cus_no = #{cus_no} AND order_code = #{order_code}
        AND prod_no IN
        <foreach collection="prod_no_list" item="prod_no" separator="," open="(" close=")">
            #{prod_no}
        </foreach>
    </update>

</mapper>